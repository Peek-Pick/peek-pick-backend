version: "3.8"

services:
  db:
    image: pgvector/pgvector:pg16
    container_name: peekpick-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ppdbuser
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: peek_pick_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: peekpick-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_PASSWORD: ${DB_PASSWORD}
      ES_PASSWORD: ${ES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ORS_API_KEY: ${ORS_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_SUMMARIZER_KEY: ${OPENAI_SUMMARIZER_KEY}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
    depends_on:
      - db
      - elasticsearch

  elasticsearch:
    build:
      context: ./src/main/resources/elasticsearch/
      dockerfile: Dockerfile
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ES_PASSWORD}
      - xpack.security.enabled=true
    ports:
      - "9200:9200"

  nginx:
    image: nginx:alpine
    container_name: peekpick-nginx
    restart: unless-stopped
    ports:
      - "8081:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./upload:/usr/share/nginx/html
    depends_on:
      - backend

volumes:
  pgdata:
